import subprocess

# Construct the ADB command to open the camera and capture a picture
adb_command = ['adb', 'shell', 'am', 'start', '-a', 'android.media.action.IMAGE_CAPTURE']

# Execute the ADB command to open the camera and capture a picture
process = subprocess.Popen(adb_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
output, error = process.communicate()

# Check if the command to open the camera was successful
if process.returncode == 0:
    print('Camera app successfully opened.')
    
    # Wait for a few seconds to allow the camera app to initialize
    # Adjust the delay time as needed
    import time
    time.sleep(5)

    # Construct the ADB command to capture the picture
    adb_capture_command = ['adb', 'shell', 'input', 'keyevent', 'KEYCODE_CAMERA']

    # Execute the ADB command to capture the picture
    capture_process = subprocess.Popen(adb_capture_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    capture_output, capture_error = capture_process.communicate()

    # Check if the command to capture the picture was successful
    if capture_process.returncode == 0:
        print('Picture captured successfully.')
    else:
        print('An error occurred while capturing the picture.')
        print('Error:', capture_error.decode('utf-8'))
else:
    print('An error occurred while opening the camera app.')
    print('Error:', error.decode('utf-8'))




# import subprocess

# # Construct the ADB command to open the camera
# adb_command = ['adb', 'shell', 'am', 'start', '-a', 'android.media.action.IMAGE_CAPTURE']

# # Execute the ADB command to open the camera
# process = subprocess.Popen(adb_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
# output, error = process.communicate()

# # Check if the command was successful
# if process.returncode == 0:
#     print('Camera app successfully opened.')
# else:
#     print('An error occurred while opening the camera app.')
#     print('Error:', error.decode('utf-8'))